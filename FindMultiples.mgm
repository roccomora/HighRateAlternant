/***************************************************************
 This file contains the function:
 	FindMultiples
***************************************************************/

load "EchelonFormSystem.mgm";

/***************************************************************
 FindMultiples
 
 Given a matrix mat, a monomial factor and a sequence of
 monomials mons indexing mat columns, return the polynomials
 multiples of factor which belong to the polynomial vector space
 generated by mat, with respect to the sequence mons.

 Input:
        PolRingVars: Polynomial ring of variables
        genMat: generator matrix in systematic form
        row: index of the row

 Output:
        System of multiples of factors in mat vector space.
   
***************************************************************/

function FindMultiples(mat, factor, mons)
	ncol := #mons;
	
	// this simplified version only works with monomials factors, which is enough to run the attack
	if not (IsEmpty({mon : mon in mons | IsDivisibleBy(mon, factor)})) then
		F := Parent(mat[1,1]);
		ncols := #mons;
    	multSpaceMat := Matrix(ncols, &cat[[F ! 0 : i in [1..j-1]] cat [F ! 1] cat [F ! 0 : i in [j+1..ncols]] : j in [1..ncols] | IsDivisibleBy(mons[j], factor)]);
    	multSubspaceMat := NullspaceMatrix(Transpose(VerticalJoin(NullspaceMatrix(Transpose(mat)), NullspaceMatrix(Transpose(multSpaceMat)))));
    	return EchelonFormSystem([&+[multSubspaceMat[i, j]*mons[j] : j in [1..ncol]] div factor : i in [1..Rank(multSubspaceMat)]]);
    end if;
    
    // if there are no multiples in the sequence return the empty system
    return [];
end function;

//--------------------------------------------------------------


